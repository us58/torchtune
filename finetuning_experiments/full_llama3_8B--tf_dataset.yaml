# Usage:
#
# If model not already downloaded:
# tune download meta-llama/Meta-Llama-3-8B-Instruct --output-dir ../input/models/Meta-Llama-3-8B-Instruct --ignore-patterns "original/consolidated*" --hf-token <HF_TOKEN>
#
# The default config uses an optimizer from bitsandbytes. If you do not have it installed,
# you can install it with
#   pip install bitsandbytes
#
# Start finetuning:
# tune run full_finetune_single_device --config full_llama3_8B--tf_dataset.yaml
#
# To kill the wandb process:
# ps -aux | grep wandb | awk '{ print $2 }' | xargs kill
#
# You need to adjust all the absolute paths to the current working copy of the torchtune repository! 


# Model Arguments
model:
  _component_: torchtune.models.llama3.llama3_8b

tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: /home/fr/fr_fr/fr_us58/workspace-30-06/torchtune/input/models/Meta-Llama-3-8B/original/tokenizer.model  # adjust this!

# Input / Output
checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir: /home/fr/fr_fr/fr_us58/workspace-30-06/torchtune/input/models/Meta-Llama-3-8B  # adjust this!
  checkpoint_files: [
    model-00001-of-00004.safetensors,
    model-00002-of-00004.safetensors,
    model-00003-of-00004.safetensors,
    model-00004-of-00004.safetensors
  ]
  adapter_checkpoint: null
  recipe_checkpoint: null
  output_dir: /home/fr/fr_fr/fr_us58/workspace-30-06/torchtune/output/full_llama3-8b--tf_dataset/  # adjust this!
  model_type: LLAMA3
  safe_serialization: True
resume_from_checkpoint: False

# Dataset and Sampler
dataset:
  _component_: torchtune.datasets.text_completion_dataset
  source: json
  data_files: /home/fr/fr_fr/fr_us58/workspace-30-06/datasets/tf_dataset.json
  split: train
  column: text
  max_seq_len: 1100
shuffle: True
seed: null

# Fine-tuning arguments
batch_size: 2
epochs: 1
optimizer:
  _component_: bitsandbytes.optim.AdamW8bit
  lr: 2e-5
loss:
  _component_: torch.nn.CrossEntropyLoss
max_steps_per_epoch: null
gradient_accumulation_steps: 16
optimizer_in_bwd: True
compile: False

# WandBLogger
metric_logger:
  _component_: torchtune.utils.metric_logging.WandBLogger
  # the W&B project to log to
  project: full_llama3-8b--tf_dataset

# Logging
output_dir: /tmp/full_llama3_8b--tf_dataset_output
# metric_logger:
#   _component_: torchtune.utils.metric_logging.DiskLogger
#   log_dir: ${output_dir}
# log_every_n_steps: 1
# log_peak_memory_stats: False

# Environment
device: cuda
dtype: bf16
enable_activation_checkpointing: True

# Show case the usage of pytorch profiler
# Set enabled to False as it's only needed for debugging training
# profiler:
#   _component_: torchtune.utils.profiler
#   enabled: False
#   output_dir: ${output_dir}/torchtune_perf_tracing.json